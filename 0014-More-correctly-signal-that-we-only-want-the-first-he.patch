From b64ae9bbb9f98c326a795db457e00ae242c9a988 Mon Sep 17 00:00:00 2001
From: Alon Levy <alevy@redhat.com>
Date: Fri, 2 Aug 2013 15:27:31 +0200
Subject: [PATCH 14/14] More correctly signal that we only want the first head
 connected at start.

This prevents a bug when using old versions of qemu (< 1.2) and the latest
driver version.

This was uncovered when I found that my patch beccf8e8:
  Establish a preferred default of 1024x768 correctly.
causes a failure when running with the qemu in Debian.

The video ram allocated by older qemu versions (8M) is not enough to hold the
default heads (4) times the default screen size (1024x768).

It worked prior to my patch because the previous code was a bit of a mess.
It would hard code 1024x768 for Virtual Size, hack some crtcs to disabled,
and sorta kinda have 4 heads connected. Later resizes would come through and
mostly fix things up, so we largely got away with.

This change should correctly signal that we start with only one head
connected.

There is still more that could be done with the randr code; we have
unimplemented functions that I suspect would allow us to fail more
graciously when the user tries to create displays in excess of our RAM.

(cherry-picked from 42c88ddaccd3a286c6637aa82248e5eb1cc75006)
---
 src/qxl_driver.c | 12 +-----------
 1 file changed, 1 insertion(+), 11 deletions(-)

diff --git a/src/qxl_driver.c b/src/qxl_driver.c
index bc19e34..01522fe 100644
--- a/src/qxl_driver.c
+++ b/src/qxl_driver.c
@@ -1205,16 +1205,6 @@ qxl_create_screen_resources (ScreenPtr pScreen)
     
     set_surface (pPixmap, qxl->primary);
     
-    /* HACK - I don't want to enable any crtcs other then the first at the beginning */
-    for (i = 1; i < qxl->num_heads; ++i)
-    {
-	qxl_output_private *private;
-
-	qxl->crtcs[i]->enabled = 0;
-	private = qxl->outputs[i]->driver_private;
-	private->status = XF86OutputStatusDisconnected;
-    }
-    
     qxl_create_desired_modes (qxl);
     qxl_update_edid (qxl);
     
@@ -2345,7 +2335,7 @@ qxl_init_randr (ScrnInfoPtr pScrn, qxl_screen_t *qxl)
 	output->driver_private = qxl_output;
 	qxl_output->head = i;
 	qxl_output->qxl = qxl;
-	qxl_output->status = XF86OutputStatusConnected;
+	qxl_output->status = i ? XF86OutputStatusDisconnected : XF86OutputStatusConnected;
 	qxl_crtc->output = output;
     }
     
-- 
1.8.3.1

